name: 3. Lanzar YMLs

on:
  workflow_run:
    workflows: ["2. Implementar Terraform a AWS"]
    types:
      - completed
    branches:
      - Kubernetes
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: Kubernetes

      - name: Descargar artefacto EFS ID
        uses: actions/github-script@v6
        id: download_artifact_from_previous_workflow
        with:
          script: |
            const artifacts = await github.rest.actions.listWorkflowRunArtifacts({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: ${{ github.event.workflow_run.id }},
            });
            const matchArtifact = artifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "efs-id";
            })[0];
            const download = await github.rest.actions.downloadArtifact({
              owner: context.repo.owner,
              repo: context.repo.repo,
              artifact_id: matchArtifact.id,
              archive_format: 'zip',
            });
            const fs = require('fs');
            fs.writeFileSync(`${process.env.GITHUB_WORKSPACE}/efs-id.zip`, Buffer.from(download.data));

      - name: Descomprimir artefacto
        run: |
          unzip efs-id.zip -d ./efs-artifact

      - name: Leer EFS ID
        id: read_efs
        run: |
          EFS_ID=$(cat ./efs-artifact/efs_id.txt)
          echo "EFS_ID=$EFS_ID" >> $GITHUB_ENV
          echo "efs_id=$EFS_ID" >> $GITHUB_OUTPUT

      - name: Mostrar EFS_ID para debug
        run: echo "EFS ID es ${{ env.EFS_ID }}"

      - name: Reemplazar volumeHandle
        run: |
          sed -i "s/fs-REEMPLAZAR-ID-EFS/${{ env.EFS_ID }}/g" pod/volumenes_efs.yml

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id:       ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token:       ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region:              us-east-1

      - name: Modificar la configuraci√≥n de EKS
        run: aws eks update-kubeconfig --name tecnoiliberis --region us-east-1

      - name: Aplicar Deployments
        run: kubectl apply -f pod/
